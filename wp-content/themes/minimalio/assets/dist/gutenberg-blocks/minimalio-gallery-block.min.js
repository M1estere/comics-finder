(() => { "use strict"; var e, a = { 986: () => { function e() { return e = Object.assign ? Object.assign.bind() : function (e) { for (var a = 1; a < arguments.length; a++) { var l = arguments[a]; for (var t in l) Object.prototype.hasOwnProperty.call(l, t) && (e[t] = l[t]) } return e }, e.apply(this, arguments) } const a = window.wp.element, l = window.wp.components, t = ({ title: e, device: t, renderFunction: i }) => (0, a.createElement)("div", { className: "res__devices" }, (0, a.createElement)("div", { className: "res__label" }, e), (0, a.createElement)("div", { className: "res__btns" }, (0, a.createElement)(l.Button, { onClick: () => i("desktop"), isSmall: !0, isPressed: "desktop" === t }, (0, a.createElement)("span", { className: "dashicons dashicons-desktop" })), (0, a.createElement)(l.Button, { onClick: () => i("tablet"), isSmall: !0, isPressed: "tablet" === t }, (0, a.createElement)("span", { className: "dashicons dashicons-tablet" })), (0, a.createElement)(l.Button, { onClick: () => i("smartphone"), isSmall: !0, isPressed: "smartphone" === t }, (0, a.createElement)("span", { className: "dashicons dashicons-smartphone" })))), { registerBlockType: i } = wp.blocks, { useBlockProps: n, BlockControls: r, InspectorControls: o, MediaPlaceholder: m, MediaUpload: s, MediaUploadCheck: c } = wp.blockEditor, { ToolbarGroup: g, ToolbarButton: p, PanelBody: d, RangeControl: u, ToggleControl: y, SelectControl: b } = wp.components, { Fragment: v } = wp.element, { __ } = wp.i18n; i("minimalio-blocks/minimalio-gallery", { title: "Minimalio Gallery", description: "A Gallery", icon: "format-image", category: "media", apiVersion: 3, attributes: { galleryId: { type: "string" }, galleryStyle: { type: "string", default: "masonry" }, imageRatio: { type: "string", default: "1-1" }, images: { type: "array" }, colDevice: { type: "string", default: "desktop" }, deskCol: { type: "number", default: 3 }, tabCol: { type: "number", default: 2 }, phoneCol: { type: "number", default: 1 }, gapDevice: { type: "string", default: "desktop" }, deskGap: { type: "number", default: 2 }, tabGap: { type: "number", default: 2 }, phoneGap: { type: "number", default: 2 }, imageHoverEffect: { type: "string", default: "none" } }, edit({ attributes: l, setAttributes: i, clientId: y }) { const { galleryId: h, galleryStyle: E, imageRatio: f, images: C, colDevice: k, deskCol: G, tabCol: _, phoneCol: w, gapDevice: O, deskGap: S, tabGap: I, phoneGap: N, imageHoverEffect: $ } = l, x = C ? G : 1; return i({ galleryId: y.slice(0, 8) }), (0, a.createElement)(v, null, (0, a.createElement)(o, null, (0, a.createElement)(d, { title: __("Gallery Style", "minimalio-image-gallery"), initialOpen: !0 }, (0, a.createElement)(b, { label: "Gallery Style", selected: E, value: E, options: [{ label: "Masonry", value: "masonry" }, { label: "Grid", value: "grid" }], onChange: e => i({ galleryStyle: e }) }), "grid" === l.galleryStyle && (0, a.createElement)(b, { label: "Image Aspect Ratio", selected: f, value: f, options: [{ label: "1 : 1", value: "1-1" }, { label: "4 : 3", value: "4-3" }, { label: "3 : 4", value: "3-4" }, { label: "16 : 9", value: "16-9" }, { label: "9 : 16", value: "9-16" }, { label: "2.39 : 1", value: "239-1" }], onChange: e => i({ imageRatio: e }) })), (0, a.createElement)(d, { title: __("Gallery Settings", "minimalio-image-gallery"), initialOpen: !0 }, (0, a.createElement)(t, { device: k, title: __("Number of Columns", "minimalio-image-gallery"), renderFunction: e => i({ colDevice: e }) }), "desktop" === k && (0, a.createElement)(u, { value: G, onChange: e => i({ deskCol: e }), min: 1, max: 7 }), "tablet" === k && (0, a.createElement)(u, { value: _, onChange: e => i({ tabCol: e }), min: 1, max: 7 }), "smartphone" === k && (0, a.createElement)(u, { value: w, onChange: e => i({ phoneCol: e }), min: 1, max: 7 }), (0, a.createElement)(t, { device: O, title: __("Items Gutter", "minimalio-image-gallery"), renderFunction: e => i({ gapDevice: e }) }), "desktop" === O && (0, a.createElement)(u, { value: S, onChange: e => i({ deskGap: e }), min: 0, max: 6, help: __("unit in 0.5 REM", "minimalio-image-gallery") }), "tablet" === O && (0, a.createElement)(u, { value: I, onChange: e => i({ tabGap: e }), min: 0, max: 6, help: __("unit in 0.5 REM", "minimalio-image-gallery") }), "smartphone" === O && (0, a.createElement)(u, { value: N, onChange: e => i({ phoneGap: e }), min: 0, max: 6, help: __("unit in 0.5 REM", "minimalio-image-gallery") })), (0, a.createElement)(d, { title: __("Image Hover", "minimalio-image-gallery"), initialOpen: !0 }, (0, a.createElement)(b, { label: __("Image Hover Effect", "minimalio-image-gallery"), value: $, options: [{ label: __("None", "minimalio-image-gallery"), value: "none" }, { label: __("Zoom In", "minimalio-image-gallery"), value: "zoom__in" }, { label: __("Zoom Out", "minimalio-image-gallery"), value: "zoom__out" }, { label: __("From GrayScale to Color", "minimalio-image-gallery"), value: "gray__scale" }, { label: __("From Color to GrayScale", "minimalio-image-gallery"), value: "gray__scale__color" }], onChange: e => { i({ imageHoverEffect: e }) } }))), C && (0, a.createElement)(r, null, (0, a.createElement)(g, null, (0, a.createElement)(c, null, (0, a.createElement)(s, { multiple: !0, onSelect: e => i({ images: e }), gallery: !0, allowedTypes: ["image"], value: C.map((e => e.id)), render: ({ open: e }) => (0, a.createElement)(p, { label: __("Edit Images", "minimalio-image-gallery"), onClick: e, icon: "edit" }) })))), (0, a.createElement)("div", e({}, n({ className: "" }), { style: { display: "grid", gridTemplateColumns: `repeat(${x}, minmax(0, 1fr))`, gap: `calc(${S} * 0.5rem)` } }), C ? C.map((e => (0, a.createElement)("div", { key: e.id, className: "single-gallery-image" }, (0, a.createElement)("img", { src: e.url, alt: e.alt ? e.alt : __("Gallery Image", "minimalio-image-gallery"), className: `wp-image${e.id}` })))) : (0, a.createElement)(m, { multiple: !0, onSelect: e => i({ images: e }), onFilesPreUpload: e => i({ images: e }), onSelectURL: !1, allowedTypes: ["image"], labels: { title: __("Add Gallery Images", "minimalio-image-gallery") } }))) }, save({ attributes: l }) { const { galleryId: t, galleryStyle: i, imageRatio: r, images: o, deskCol: m, tabCol: s, phoneCol: c, deskGap: g, tabGap: p, phoneGap: d, imageHoverEffect: u } = l; return (0, a.createElement)("figure", e({}, n.save({ className: `wp-block-gallery grid ${i} lg:grid-cols-${m} md:grid-cols-${s} grid-cols-${c} dg__${g} tg__${p} pg__${d}` }), { "data-id": t, "data-grid": i, id: t }), o && o.map((e => (0, a.createElement)("figure", { className: `wp-block-image ${u} ratio_${r}` }, (0, a.createElement)("a", { href: e.url }, (0, a.createElement)("img", { src: e.url, alt: e.alt ? e.alt : __("Gallery Image", "minimalio-image-gallery"), className: `wp-image-${e.id}` })))))) } }) } }, l = {}; function t(e) { var i = l[e]; if (void 0 !== i) return i.exports; var n = l[e] = { exports: {} }; return a[e](n, n.exports, t), n.exports } t.m = a, e = [], t.O = (a, l, i, n) => { if (!l) { var r = 1 / 0; for (c = 0; c < e.length; c++) { for (var [l, i, n] = e[c], o = !0, m = 0; m < l.length; m++)(!1 & n || r >= n) && Object.keys(t.O).every((e => t.O[e](l[m]))) ? l.splice(m--, 1) : (o = !1, n < r && (r = n)); if (o) { e.splice(c--, 1); var s = i(); void 0 !== s && (a = s) } } return a } n = n || 0; for (var c = e.length; c > 0 && e[c - 1][2] > n; c--)e[c] = e[c - 1]; e[c] = [l, i, n] }, t.o = (e, a) => Object.prototype.hasOwnProperty.call(e, a), (() => { var e = { 144: 0, 672: 0 }; t.O.j = a => 0 === e[a]; var a = (a, l) => { var i, n, [r, o, m] = l, s = 0; if (r.some((a => 0 !== e[a]))) { for (i in o) t.o(o, i) && (t.m[i] = o[i]); if (m) var c = m(t) } for (a && a(l); s < r.length; s++)n = r[s], t.o(e, n) && e[n] && e[n][0](), e[n] = 0; return t.O(c) }, l = globalThis.webpackChunkboilerplate = globalThis.webpackChunkboilerplate || []; l.forEach(a.bind(null, 0)), l.push = a.bind(null, l.push.bind(l)) })(); var i = t.O(void 0, [672], (() => t(986))); i = t.O(i) })();